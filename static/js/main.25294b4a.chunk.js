(this["webpackJsonpps-react-dk"]=this["webpackJsonpps-react-dk"]||[]).push([[0],[,,,function(e,r,n){"use strict";n.d(r,"a",(function(){return o}));n(1);var t=n(0);var o=function(e){var r=e.label,n=e.required,o=e.htmlFor;return Object(t.jsxs)("label",{style:{display:"block"},htmlFor:o,children:[r," ",n&&Object(t.jsx)("span",{style:{color:"red"},children:" *"})]})}},function(e,r,n){"use strict";n.d(r,"a",(function(){return s}));var t=n(2),o=n(5),a=(n(1),n(3)),i=n(0);var s=function(e){var r=e.htmlId,n=e.name,s=e.label,l=e.type,p=void 0===l?"text":l,d=e.required,u=void 0!==d&&d,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,f=e.children,y=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(i.jsxs)("div",{style:{marginBottom:16},children:[Object(i.jsx)(a.a,{htmlFor:r,label:s,required:u}),Object(i.jsx)("input",Object(t.a)({id:r,type:p,name:n,placeholder:m,value:h,onChange:c,style:g&&{border:"solid 1px red"}},y)),f,g&&Object(i.jsx)("div",{className:"error",style:{color:"red"},children:g})]})}},,function(e,r,n){"use strict";n.d(r,"a",(function(){return a}));var t=n(36),o=(n(1),n(0));var a=function(e){var r,n=e.percent,a=e.width,i=e.height,s=void 0===i?5:i,l=e.colors,p=void 0===l?(r={full:"green",half:"lightgreen",low:"red"},Object(t.a)(r),r):l;return Object(o.jsx)("div",{style:{border:"solid 1px lightgray",width:a},children:Object(o.jsx)("div",{style:{width:parseInt(a*(n/100),10),height:s,backgroundColor:100===n?p.full:n>50?p.half:p.low}})})}},,,,,,function(e,r,n){"use strict";n.d(r,"a",(function(){return u}));var t=n(2),o=n(7),a=n(1),i=n(6),s=n(13),l=n(4),p=n(0),d=function(e){var r=e.htmlId,n=e.value,d=e.label,u=e.error,c=e.onChange,m=e.placeholder,h=e.maxLength,g=e.showVisibilityToggle,f=e.quality,y=Object(a.useState)(!1),b=Object(o.a)(y,2),x=b[0],j=b[1];return Object(p.jsxs)(l.a,Object(t.a)(Object(t.a)({htmlId:r,label:d,placeholder:m,type:x?"text":"password",onChange:c,value:n,maxLength:h,error:u,required:!0},e),{},{children:[g&&Object(p.jsx)("a",{href:"#",onClick:function(e){j((function(e){return!e})),e&&e.preventDefault()},style:{marginLeft:5},children:Object(p.jsx)(s.a,{})}),n.length>0&&f&&Object(p.jsx)(i.a,{percent:f,width:130})]}))};d.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var u=d},function(e,r,n){"use strict";n.d(r,"a",(function(){return o}));n(1);var t=n(0);var o=function(){return Object(t.jsx)("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22",children:Object(t.jsxs)("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d",children:[Object(t.jsx)("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),Object(t.jsx)("circle",{cx:"466.08",cy:"466.02",r:"134.5"})]})})}},function(e,r,n){},,,function(e,r){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from \'react\';\r\n\r\n/** SVG Eye Icon */\r\nfunction EyeIcon() {\r\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\r\n  return (\r\n    <svg width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22">\r\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\r\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\r\n        <circle cx="466.08" cy="466.02" r="134.5" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default EyeIcon;',examples:[{name:"Example",description:"",code:'import React from "react";\r\nimport EyeIcon from "ps-react-dk/EyeIcon";\r\n\r\nexport default function EyeIconExample() {\r\n    return <EyeIcon />;\r\n}'}]},{name:"HelloWorld",description:"HelloWorld Component.",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:'"World"',computed:!1}}},code:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** HelloWorld Component. */\r\nfunction HelloWorld({message}) {\r\n    return <div>Hello {message}</div>;\r\n}\r\n\r\nHelloWorld.propTypes = {\r\n    /** Message to display */\r\n    message: PropTypes.string\r\n}\r\n\r\nHelloWorld.defaultProps = {\r\n    message: \"World\"\r\n}\r\n\r\nexport default HelloWorld;",examples:[{name:"ExampleHelloWorld",description:"Custom message",code:'import React from \'react\';\r\nimport HelloWorld from "ps-react-dk/HelloWorld";\r\n\r\n/** Custom message */\r\nexport default function ExampleHelloWorld() {\r\n    return <HelloWorld message="people!" />\r\n}'}]},{name:"Label",description:"Label component",props:{label:{type:{name:"string"},required:!0,description:"Label text"},htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:'import React from "react";\r\nimport PropTypes from \'prop-types\';\r\n\r\n/** Label component */\r\nfunction Label({label, required, htmlFor}) {\r\n    return (\r\n        <label style={{display: "block"}} htmlFor={htmlFor} >\r\n            {label} {required && <span style={{color: "red"}}> *</span>}\r\n        </label>\r\n    );\r\n}\r\n\r\nLabel.propTypes = {\r\n    /** Label text */\r\n    label: PropTypes.string.isRequired,\r\n\r\n    /** HTML ID for associated input */\r\n    htmlFor: PropTypes.string.isRequired,\r\n\r\n    /** Display asterisk after label if true */\r\n    required: PropTypes.bool,\r\n};\r\n\r\nexport default Label;',examples:[{name:"ExampleOptional",description:"Optional Label",code:"import React from 'react'\r\nimport Label from 'ps-react-dk/Label'\r\n\r\n/** Optional Label */\r\nexport default function ExampleOptional() {\r\n    return <Label label=\"This is optional label\" htmlFor=\"example\" />\r\n}"},{name:"ExampleRequired",description:"Required Label",code:"import React from 'react'\r\nimport Label from 'ps-react-dk/Label'\r\n\r\n/** Required Label */\r\nexport default function ExampleOptional() {\r\n    return <Label label=\"This is required label\" htmlFor=\"example\" required={true} />\r\n}"}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProgressBar from '../ProgressBar';\r\nimport EyeIcon from '../EyeIcon';\r\nimport TextInput from '../TextInput';\r\n\r\n/** Password input with integrated label, quality tips, and show password toggle. */\r\nconst PasswordInput = (props) => {\r\n    const { \r\n        htmlId, \r\n        value, \r\n        label, \r\n        error, \r\n        onChange, \r\n        placeholder, \r\n        maxLength, \r\n        showVisibilityToggle, \r\n        quality\r\n    } = props;\r\n    const [showPassword, setShowPassowrd] = useState(false);\r\n\r\n    const toggleShowPassword = event => {\r\n        setShowPassowrd(prevShowPassword => !prevShowPassword);\r\n        if (event) event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n          htmlId={htmlId}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          type={showPassword ? 'text' : 'password'}\r\n          onChange={onChange}\r\n          value={value}\r\n          maxLength={maxLength}\r\n          error={error}\r\n          required\r\n          {...props}>\r\n          {\r\n            showVisibilityToggle &&\r\n            <a\r\n              href=\"#\"\r\n              onClick={toggleShowPassword}\r\n              style={{ marginLeft: 5 }}>\r\n              <EyeIcon />\r\n            </a>\r\n          }\r\n          {\r\n            value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\r\n          }\r\n        </TextInput>\r\n      );\r\n}\r\n\r\nPasswordInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Password value */\r\n  value: PropTypes.any,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string,\r\n\r\n  /** Function called when password input value changes */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Max password length accepted */\r\n  maxLength: PropTypes.number,\r\n\r\n  /** Placeholder displayed when no password is entered */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Set to true to show the toggle for displaying the currently entered password */\r\n  showVisibilityToggle: PropTypes.bool,\r\n\r\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\r\n  quality: PropTypes.number,\r\n\r\n  /** Validation error to display */\r\n  error: PropTypes.string\r\n};\r\n\r\nPasswordInput.defaultProps = {\r\n  maxLength: 50,\r\n  showVisibilityToggle: false,\r\n  label: 'Password'\r\n};\r\n\r\nexport default PasswordInput;\r\n",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:'import React, { useState } from \'react\';\nimport PasswordInput from \'ps-react-dk/PasswordInput\';\n\n/** All features enabled */\nconst ExampleAllFeatures = (props) => {\n  const [password, setPassword] = useState("");\n\n  const getQuality = () => {\n    const length = password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  return (\n    <div>\n      <PasswordInput\n        htmlId="password-input-example-all-features"\n        name="password"\n        onChange={event => setPassword(event.target.value)}\n        value={password}\n        minLength={8}\n        placeholder="Enter password"\n        showVisibilityToggle\n        quality={getQuality()}\n        {...props} />\n    </div>\n  );\n}\n\nexport default ExampleAllFeatures;\n'}]},{name:"ProgressBar",description:"ProgressBar component",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed."},width:{type:{name:"number"},required:!0,description:"Bar width."},height:{type:{name:"number"},required:!1,description:"Bar height.",defaultValue:{value:"5",computed:!1}},colors:{type:{name:"shape",value:{low:{name:"string",required:!1},half:{name:"string",required:!1},full:{name:"string",required:!1}}},required:!1,description:"",defaultValue:{value:'{ full: "green", half: "lightgreen", low: "red" }',computed:!1}}},code:'import React from "react";\r\nimport PropTypes from \'prop-types\';\r\n\r\n/** ProgressBar component */\r\nfunction ProgressBar({\r\n    percent, \r\n    width, \r\n    height = 5,\r\n    colors = {} = { full: "green", half: "lightgreen", low: "red" }}) {\r\n    const getColor = () => {\r\n        return percent === 100\r\n            ? colors.full\r\n            : percent > 50\r\n                ? colors.half\r\n                : colors.low;\r\n    };\r\n\r\n    const getWidthAsPercentOfTotalWidth = () => {\r\n        return parseInt(width * (percent / 100), 10);\r\n    };\r\n\r\n    return (\r\n        <div style={{border: \'solid 1px lightgray\', width: width}}>\r\n            <div style={{\r\n                width: getWidthAsPercentOfTotalWidth(),\r\n                height,\r\n                backgroundColor: getColor()\r\n            }}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    /** Percent of progress completed. */\r\n    percent: PropTypes.number.isRequired,\r\n    /** Bar width. */\r\n    width: PropTypes.number.isRequired,\r\n    /** Bar height. */\r\n    height: PropTypes.number,\r\n\r\n    colors: PropTypes.shape({\r\n        low: PropTypes.string,\r\n        half: PropTypes.string,\r\n        full: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default ProgressBar;',examples:[{name:"Example100Percent",description:"100% progress and height 20px and full color blue",code:"import React from 'react'\r\nimport ProgressBar from 'ps-react-dk/ProgressBar'\r\n\r\n/** 100% progress and height 20px and full color blue */\r\nexport default function Example100Percent() {\r\n    return <ProgressBar percent={100} width={150} height={20} colors={{ full: \"blue\" }} />\r\n}"},{name:"Example10Percent",description:"10% progress",code:"import React from 'react'\r\nimport ProgressBar from 'ps-react-dk/ProgressBar'\r\n\r\n/** 10% progress */\r\nexport default function Example10Percent() {\r\n    return <ProgressBar percent={10} width={150} />\r\n}"},{name:"Example60Percent",description:"60% progress",code:"import React from 'react'\r\nimport ProgressBar from 'ps-react-dk/ProgressBar'\r\n\r\n/** 60% progress */\r\nexport default function Example60Percent() {\r\n    return <ProgressBar percent={60} width={150} />\r\n}"}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React, { useState } from \'react\';\r\nimport PropTypes from \'prop-types\';\r\nimport TextInput from \'../TextInput\';\r\nimport PasswordInput from \'../PasswordInput\';\r\n\r\n/** Registration form with built-in validation. */\r\nconst RegistrationForm = (props) => {\r\n    const {\r\n        minPasswordLength,\r\n        confirmationMessage,\r\n        onSubmit\r\n    } = props;\r\n    const [user, setUser] = useState({ email: "", password: ""});\r\n    const [errors, setErrors] = useState({});\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const onChange = (event) => {\r\n        setUser(currentUser => {\r\n            const user = {...currentUser};\r\n            user[event.target.name] = event.target.value;\r\n            return user;\r\n        });\r\n    };\r\n\r\n    // Returns a number from 0 to 100 that represents password quality.\r\n    // For simplicity, just returning % of min length entered.\r\n    // Could enhance with checks for number, special char, unique characters, etc.\r\n    const passwordQuality = (password) => {\r\n        if (!password) return null;\r\n        if (password.length >= minPasswordLength) return 100;\r\n        const percentOfMinLength = parseInt(password.length/minPasswordLength * 100, 10);\r\n        return percentOfMinLength;\r\n    };\r\n\r\n    const validate = ({email, password}) => {\r\n        const errors = {};\r\n        if (!email) errors.email = \'Email required.\';\r\n        if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\r\n\r\n        setErrors(errors);\r\n        const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\r\n        return formIsValid;\r\n    };\r\n\r\n    const onFormSubmit = () => {\r\n        const formIsValid = validate(user);\r\n        if (formIsValid) {\r\n          onSubmit(user);\r\n          setSubmitted(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        submitted \r\n            ? <h2>{confirmationMessage}</h2> \r\n            : <div>\r\n                <TextInput\r\n                  htmlId="registration-form-email"\r\n                  name="email"\r\n                  onChange={onChange}\r\n                  label="Email"\r\n                  value={user.email}\r\n                  error={errors.email}\r\n                  required />\r\n\r\n                <PasswordInput\r\n                  htmlId="registration-form-password"\r\n                  name="password"\r\n                  value={user.password}\r\n                  onChange={onChange}\r\n                  quality={passwordQuality(user.password)}\r\n                  showVisibilityToggle\r\n                  maxLength={50}\r\n                  error={errors.password} />\r\n\r\n                <input type="submit" value="Register" onClick={onFormSubmit} />\r\n            </div>\r\n    );\r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n  /** Message displayed upon successful submission */\r\n  confirmationMessage: PropTypes.string,\r\n\r\n  /** Called when form is submitted */\r\n  onSubmit: PropTypes.func.isRequired,\r\n\r\n  /** Minimum password length */\r\n  minPasswordLength: PropTypes.number\r\n}\r\n\r\nRegistrationForm.defaultProps = {\r\n  confirmationMessage: "Thanks for registering!",\r\n  minPasswordLength: 8\r\n};\r\n\r\nexport default RegistrationForm;\r\n',examples:[{name:"ExampleRegistrationForm",description:"RegistrationForm example",code:"import React from 'react';\nimport RegistrationForm from 'ps-react-dk/RegistrationForm';\n\n/** RegistrationForm example */\nexport default function ExampleRegistrationForm() {\n  return <RegistrationForm onSubmit={(user) => console.log(user)} />\n}"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../Label';\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\r\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\r\n  return (\r\n    <div style={{marginBottom: 16}}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        style={error && {border: 'solid 1px red'}}\r\n        {...props}/>\r\n        {children}\r\n      {error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(['text', 'number', 'password']),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;",examples:[{name:"ExampleError",description:"Error TextInput",code:'import React from \'react\';\r\nimport TextInput from "ps-react-dk/TextInput";\r\n\r\n/** Error TextInput */\r\nexport default function ExampleError() {\r\n    return (\r\n        <TextInput\r\n            htmlId="example-optional"\r\n            label="First Name"\r\n            name="firstname"\r\n            onChange={() => {}}\r\n            required\r\n            error="First name is required."\r\n        />\r\n    )\r\n}'},{name:"ExampleOptional",description:"Optional TextInput",code:'import React from \'react\';\r\nimport TextInput from "ps-react-dk/TextInput";\r\n\r\n/** Optional TextInput */\r\nexport default function ExampleOptional() {\r\n    return (\r\n        <TextInput\r\n            htmlId="example-optional"\r\n            label="First Name"\r\n            name="firstname"\r\n            onChange={() => {}}\r\n        />\r\n    )\r\n}'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../Label';\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\r\nfunction TextInputBEM({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\r\n  return (\r\n    <div className=\"textinput\">\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && \"textinput__input--state-error\"}\r\n        {...props}/>\r\n        {children}\r\n      {error && <div className=\"textinput__error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputBEM.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(['text', 'number', 'password']),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputBEM;",examples:[{name:"ExampleError",description:"Error TextInput",code:'import React from \'react\';\r\nimport TextInputBEM from "ps-react-dk/TextInputBEM";\r\n\r\n/** Error TextInput */\r\nexport default function ExampleError() {\r\n    return (\r\n        <TextInputBEM\r\n            htmlId="example-optional"\r\n            label="First Name"\r\n            name="firstname"\r\n            onChange={() => {}}\r\n            required\r\n            error="First name is required."\r\n        />\r\n    )\r\n}'}]},{name:"TextInputCSSModules",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../Label';\r\nimport styles from \"./textInput.css\";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\r\nfunction TextInputCSSModules({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\r\n  return (\r\n    <div className={styles.fieldset}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && styles.inputError}\r\n        {...props}/>\r\n        {children}\r\n      {error && <div className={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputCSSModules.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(['text', 'number', 'password']),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputCSSModules;",examples:[{name:"ExampleError",description:"Error TextInput",code:'import React from \'react\';\r\nimport TextInputCSSModules from "ps-react-dk/TextInputCSSModules";\r\n\r\n/** Error TextInput */\r\nexport default function ExampleError() {\r\n    return (\r\n        <TextInputCSSModules\r\n            htmlId="example-optional"\r\n            label="First Name"\r\n            name="firstname"\r\n            onChange={() => {}}\r\n            required\r\n            error="First name is required."\r\n        />\r\n    )\r\n}'}]},{name:"TextInputStyledComponents",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Label from '../Label';\r\nimport styled from \"styled-components\";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\r\nfunction TextInputStyleComponents({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\r\n    const Error = styled.div`\r\n        color: red;\r\n    `;\r\n    \r\n    const Input = styled.input`\r\n        border: ${error && \"solid 1px red\"};\r\n        display: block;\r\n    `;\r\n\r\n    const Fieldset = styled.div`\r\n        margin-bottom: 16px;\r\n    `;\r\n\r\n    return (\r\n      <Fieldset>\r\n        <Label htmlFor={htmlId} label={label} required={required} />\r\n        <Input\r\n          id={htmlId}\r\n          type={type}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n          {...props}/>\r\n          {children}\r\n        {error && <Error>{error}</Error>}\r\n      </Fieldset>\r\n    );\r\n};\r\n\r\nTextInputStyleComponents.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(['text', 'number', 'password']),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputStyleComponents;",examples:[{name:"ExampleError",description:"Error TextInput",code:'import React from \'react\';\r\nimport TextInputStyledComponents from "ps-react-dk/TextInputStyledComponents";\r\n\r\n/** Error TextInput */\r\nexport default function ExampleError() {\r\n    return (\r\n        <TextInputStyledComponents\r\n            htmlId="example-optional"\r\n            label="First Name"\r\n            name="firstname"\r\n            onChange={() => {}}\r\n            required\r\n            error="First name is required."\r\n        />\r\n    )\r\n}'}]}]},,,function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(13),o=n(0);function a(){return Object(o.jsx)(t.a,{})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(3),o=n(0);function a(){return Object(o.jsx)(t.a,{label:"This is optional label",htmlFor:"example"})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(3),o=n(0);function a(){return Object(o.jsx)(t.a,{label:"This is required label",htmlFor:"example",required:!0})}},function(e,r,n){"use strict";n.r(r);var t=n(2),o=n(7),a=n(1),i=n(12),s=n(0);r.default=function(e){var r=Object(a.useState)(""),n=Object(o.a)(r,2),l=n[0],p=n[1];return Object(s.jsx)("div",{children:Object(s.jsx)(i.a,Object(t.a)({htmlId:"password-input-example-all-features",name:"password",onChange:function(e){return p(e.target.value)},value:l,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:function(){var e=l.length;return e>10?100:10*e}()},e))})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(6),o=n(0);function a(){return Object(o.jsx)(t.a,{percent:100,width:150,height:20,colors:{full:"blue"}})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(6),o=n(0);function a(){return Object(o.jsx)(t.a,{percent:10,width:150})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(6),o=n(0);function a(){return Object(o.jsx)(t.a,{percent:60,width:150})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(4),o=n(0);function a(){return Object(o.jsx)(t.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return a}));n(1);var t=n(4),o=n(0);function a(){return Object(o.jsx)(t.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return i}));n(1);var t=n(0);function o(e){var r=e.message;return Object(t.jsxs)("div",{children:["Hello ",r]})}o.defaultProps={message:"World"};var a=o;function i(){return Object(t.jsx)(a,{message:"people!"})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return u}));var t=n(1),o=n(2),a=n(7),i=n(4),s=n(12),l=n(0),p=function(e){var r,n=e.minPasswordLength,p=e.confirmationMessage,d=e.onSubmit,u=Object(t.useState)({email:"",password:""}),c=Object(a.a)(u,2),m=c[0],h=c[1],g=Object(t.useState)({}),f=Object(a.a)(g,2),y=f[0],b=f[1],x=Object(t.useState)(!1),j=Object(a.a)(x,2),v=j[0],w=j[1],T=function(e){h((function(r){var n=Object(o.a)({},r);return n[e.target.name]=e.target.value,n}))};return v?Object(l.jsx)("h2",{children:p}):Object(l.jsxs)("div",{children:[Object(l.jsx)(i.a,{htmlId:"registration-form-email",name:"email",onChange:T,label:"Email",value:m.email,error:y.email,required:!0}),Object(l.jsx)(s.a,{htmlId:"registration-form-password",name:"password",value:m.password,onChange:T,quality:(r=m.password,r?r.length>=n?100:parseInt(r.length/n*100,10):null),showVisibilityToggle:!0,maxLength:50,error:y.password}),Object(l.jsx)("input",{type:"submit",value:"Register",onClick:function(){(function(e){var r=e.email,t=e.password,o={};return r||(o.email="Email required."),t.length<n&&(o.password="Password must be at least ".concat(n," characters.")),b(o),0===Object.getOwnPropertyNames(o).length})(m)&&(d(m),w(!0))}})]})};p.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var d=p;function u(){return Object(l.jsx)(d,{onSubmit:function(e){return console.log(e)}})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return l}));n(1),n(44);var t=n(2),o=n(5),a=n(3),i=n(0);var s=function(e){var r=e.htmlId,n=e.name,s=e.label,l=e.type,p=void 0===l?"text":l,d=e.required,u=void 0!==d&&d,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,f=e.children,y=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(i.jsxs)("div",{className:"textinput",children:[Object(i.jsx)(a.a,{htmlFor:r,label:s,required:u}),Object(i.jsx)("input",Object(t.a)({id:r,type:p,name:n,placeholder:m,value:h,onChange:c,className:g&&"textinput__input--state-error"},y)),f,g&&Object(i.jsx)("div",{className:"textinput__error",children:g})]})};function l(){return Object(i.jsx)(s,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return d}));n(1);var t=n(2),o=n(5),a=n(3),i=n(14),s=n.n(i),l=n(0);var p=function(e){var r=e.htmlId,n=e.name,i=e.label,p=e.type,d=void 0===p?"text":p,u=e.required,c=void 0!==u&&u,m=e.onChange,h=e.placeholder,g=e.value,f=e.error,y=e.children,b=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(l.jsxs)("div",{className:s.a.fieldset,children:[Object(l.jsx)(a.a,{htmlFor:r,label:i,required:c}),Object(l.jsx)("input",Object(t.a)({id:r,type:d,name:n,placeholder:h,value:g,onChange:m,className:f&&s.a.inputError},b)),y,f&&Object(l.jsx)("div",{className:s.a.error,children:f})]})};function d(){return Object(l.jsx)(p,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return m}));n(1);var t,o,a,i=n(2),s=n(15),l=n(5),p=n(3),d=n(16),u=n(0);var c=function(e){var r=e.htmlId,n=e.name,c=e.label,m=e.type,h=void 0===m?"text":m,g=e.required,f=void 0!==g&&g,y=e.onChange,b=e.placeholder,x=e.value,j=e.error,v=e.children,w=Object(l.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),T=d.a.div(t||(t=Object(s.a)(["\n        color: red;\n    "]))),q=d.a.input(o||(o=Object(s.a)(["\n        border: ",";\n        display: block;\n    "])),j&&"solid 1px red"),I=d.a.div(a||(a=Object(s.a)(["\n        margin-bottom: 16px;\n    "])));return Object(u.jsxs)(I,{children:[Object(u.jsx)(p.a,{htmlFor:r,label:c,required:f}),Object(u.jsx)(q,Object(i.a)({id:r,type:h,name:n,placeholder:b,value:x,onChange:y},w)),v,j&&Object(u.jsx)(T,{children:j})]})};function m(){return Object(u.jsx)(c,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},,,,,,,,function(e,r,n){},,function(e,r,n){var t={"./EyeIcon/Example":20,"./EyeIcon/Example.js":20,"./HelloWorld/ExampleHelloWorld":29,"./HelloWorld/ExampleHelloWorld.js":29,"./Label/ExampleOptional":21,"./Label/ExampleOptional.js":21,"./Label/ExampleRequired":22,"./Label/ExampleRequired.js":22,"./PasswordInput/ExampleAllFeatures":23,"./PasswordInput/ExampleAllFeatures.js":23,"./ProgressBar/Example100Percent":24,"./ProgressBar/Example100Percent.js":24,"./ProgressBar/Example10Percent":25,"./ProgressBar/Example10Percent.js":25,"./ProgressBar/Example60Percent":26,"./ProgressBar/Example60Percent.js":26,"./RegistrationForm/ExampleRegistrationForm":30,"./RegistrationForm/ExampleRegistrationForm.js":30,"./TextInput/ExampleError":27,"./TextInput/ExampleError.js":27,"./TextInput/ExampleOptional":28,"./TextInput/ExampleOptional.js":28,"./TextInputBEM/ExampleError":31,"./TextInputBEM/ExampleError.js":31,"./TextInputCSSModules/ExampleError":32,"./TextInputCSSModules/ExampleError.js":32,"./TextInputStyledComponents/ExampleError":33,"./TextInputStyledComponents/ExampleError.js":33};function o(e){var r=a(e);return n(r)}function a(e){if(!n.o(t,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return t[e]}o.keys=function(){return Object.keys(t)},o.resolve=a,e.exports=o,o.id=43},function(e,r,n){},,function(e,r,n){"use strict";n.r(r);var t=n(1),o=n.n(t),a=n(34),i=n.n(a),s=(n(41),n(8)),l=n(9),p=n(11),d=n(10),u=n(0),c=function(e){var r=e.components;return Object(u.jsx)("ul",{className:"navigation",children:r.map((function(e){return Object(u.jsx)("li",{children:Object(u.jsx)("a",{href:"#".concat(e),children:e})},e)}))})},m=n(19),h=n.n(m),g=n(35),f=n.n(g),y=function(e){Object(p.a)(n,e);var r=Object(d.a)(n);function n(){return Object(s.a)(this,n),r.apply(this,arguments)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){h.a.registerLanguage("javascript",f.a),h.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return Object(u.jsx)("pre",{ref:function(r){e.element=r},children:Object(u.jsx)("code",{children:this.props.children})})}}]),n}(o.a.Component),b=function(e){Object(p.a)(t,e);var r=Object(d.a)(t);function t(e){var n;return Object(s.a)(this,t),(n=r.call(this,e)).toggleCode=function(e){e.preventDefault(),n.setState((function(e){return{showCode:!e.showCode}}))},n.state={showCode:!1},n}return Object(l.a)(t,[{key:"render",value:function(){var e=this.state.showCode,r=this.props.example,t=r.code,o=r.description,a=r.name,i=n(43)("./".concat(this.props.componentName,"/").concat(a)).default;return Object(u.jsxs)("div",{className:"example",children:[o&&Object(u.jsx)("h4",{children:o}),Object(u.jsx)(i,{}),Object(u.jsx)("p",{children:Object(u.jsxs)("a",{href:"#",onClick:this.toggleCode,children:[e?"Hide":"Show"," Code"]})}),e&&Object(u.jsx)(y,{children:t})]})}}]),t}(o.a.Component),x=function(e){var r=e.props;return Object(u.jsxs)("table",{className:"props",children:[Object(u.jsx)("thead",{children:Object(u.jsxs)("tr",{children:[Object(u.jsx)("th",{children:"Name"}),Object(u.jsx)("th",{children:"Description"}),Object(u.jsx)("th",{children:"Type"}),Object(u.jsx)("th",{children:"Default"}),Object(u.jsx)("th",{children:"Required"})]})}),Object(u.jsx)("tbody",{children:Object.keys(r).map((function(e){return Object(u.jsxs)("tr",{children:[Object(u.jsx)("td",{children:e}),Object(u.jsx)("td",{children:r[e].description}),Object(u.jsx)("td",{children:r[e].type.name}),Object(u.jsx)("td",{children:r[e].defaultValue&&r[e].defaultValue.value}),Object(u.jsx)("td",{children:r[e].required&&"X"})]},e)}))})]})},j=function(e){var r=e.component,n=r.name,t=r.description,o=r.props,a=r.examples;return Object(u.jsxs)("div",{className:"componentpage",children:[Object(u.jsx)("h2",{children:n}),Object(u.jsx)("p",{children:t}),Object(u.jsxs)("h3",{children:["Example",a.length>1&&"s"]}),a.length>0?a.map((function(e){return Object(u.jsx)(b,{example:e,componentName:n},e.code)})):"No examples exist.",Object(u.jsx)("h3",{children:"Props"}),o?Object(u.jsx)(x,{props:o}):"This component accepts no props."]})},v=n(17),w=n.n(v),T=function(e){Object(p.a)(n,e);var r=Object(d.a)(n);function n(e){var t;return Object(s.a)(this,n),(t=r.call(this,e)).state={route:window.location.hash.substr(1)},t}return Object(l.a)(n,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,r=e?w.a.filter((function(r){return r.name===e}))[0]:w.a[0];return Object(u.jsxs)("div",{children:[Object(u.jsx)(c,{components:w.a.map((function(e){return e.name}))}),"string"===typeof r?Object(u.jsx)("div",{children:"component"}):Object(u.jsx)(j,{component:r})]})}}]),n}(o.a.Component),q=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,47)).then((function(r){var n=r.getCLS,t=r.getFID,o=r.getFCP,a=r.getLCP,i=r.getTTFB;n(e),t(e),o(e),a(e),i(e)}))};n(45);i.a.render(Object(u.jsx)(o.a.StrictMode,{children:Object(u.jsx)(T,{})}),document.getElementById("root")),q()}],[[46,1,2]]]);
//# sourceMappingURL=main.25294b4a.chunk.js.map